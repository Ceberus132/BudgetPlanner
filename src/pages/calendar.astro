---
import { getMonthDays, getTransactions, formatCurrency, getDailySummary, getMonthWeeks } from '../functions/calendarUtils';
import { db, Transactions } from "astro:db";
import Layout from "../layouts/Layout.astro";

const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];
const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];

// Fetch transactions from the database
const transactions = await db.select().from(Transactions);
const year = new Date().getFullYear();
---
<Layout title="Budget Calendar">
    <a href="/">Go to the Budget List</a>
    <div>
        {months.map((month, monthIndex) => (
            <div>
                <h2 class="text-xl font-bold">{month} {year}</h2>
                <div class="grid grid-cols-9 text-center font-bold mb-2">
                    <p>Week Nr.</p>
                    {days.map((day) => (
                            <div>{day}</div>
                    ))}
                    <p>Summary</p>
                </div>
                {getMonthWeeks(year, monthIndex).map(week => (
                    <div class="grid grid-cols-9 gap-2 text-center mb-2">
                        <p>{week.weekNumber}</p>

                        {week.days.map(day => {
                            let formattedDate = ''
                            let currentTransactions = []
                            if (day) {
                                formattedDate = new Date(year, monthIndex, parseInt(day)).toLocaleDateString('de-DE');
                                currentTransactions = getTransactions(formattedDate, transactions);
                            }

                            return (
                                    <div class="bg-gray-800 rounded-lg shadow min-h-28 py-2 px-4">
                                        <div>{formattedDate}</div>
                                        {currentTransactions.length > 0 ? (
                                                <div class="flex flex-col">
                                                    {currentTransactions.map((transaction) => (
                                                            <div class="flex flex-row justify-between">
                                                                <p>{transaction.payee}</p><p class={transaction.amount >= 0 ? 'text-green-600' : 'text-red-600'}>{formatCurrency(transaction.amount)}</p>
                                                            </div>
                                                    ))}
                                                </div>
                                        ) : (
                                                <div class="text-gray-500">No transactions</div>
                                        )}
                                        <p class={parseInt(getDailySummary(formattedDate, transactions)) >= 0 ? 'text-green-600' : 'text-red-600'}>{getDailySummary(formattedDate, transactions)}</p>
                                    </div>
                            )
                        })}

                        <p>Summary</p>
                    </div>
                ))}
            </div>
        ))}
    </div>
</Layout>