---
import {db, Transactions} from 'astro:db';

if (Astro.request.method === 'post') {
    const formData = await Astro.request.formData();

    const Transaction = {
        payee: formData.get('payee') as string,
        amount: parseFloat(formData.get('amount') as string),
        type: formData.get('type') as string,
        date: new Date(formData.get('date') as string),
        recurring: !!formData.get('recurring'),
        frequency: formData.get('frequency') as string || undefined,
        interval: formData.get('interval') ? parseInt(formData.get('interval') as string) : undefined,
        dayOfWeek: formData.get('dayOfWeek') ? parseInt(formData.get('dayOfWeek') as string) : undefined,
        endDate: formData.get('endDate') ? new Date(formData.get('endDate') as string) : undefined
    };

    await db.insert(Transactions).values(Transaction);
}


const transactions = await db.select().from(Transactions);
---

<form method="post">
    <label>
        Where does it come from?
        <input type="text" placeholder="Source" name="payee" required/>
    </label>
    <label>
        How much is it?
        <input type="number" placeholder="Value" name="amount" required/>
    </label>
    <label>
        <select name="type" required>
            <option value="expense" selected>Expense</option>
            <option value="income">Income</option>
        </select>
    </label>
    <label>
        When did it occur?
        <input type="date" name="date"/>
    </label>

    <label>
        Does it recur?
        <input type="checkbox" name="recurring"/>
    </label>

    <button type="submit">Add</button>
</form>

{transactions.map(({ payee, amount }) => (
    <article>
        <p>{payee}</p>
        <p>{amount}</p>
    </article>
))}